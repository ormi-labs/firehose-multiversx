type Transaction @entity {
    id: ID!

    timestamp: BigInt!
    sender: String!
    receiver: String!
    data: String!
}

interface Issuance {
    id: ID!

    tx: Transaction!

    token_name: String!
    token_ticker: String!
    extra_fields: String!
}

type IssuanceTransaction implements Issuance @entity {
    id: ID!

    tx: Transaction!

    token_name: String!
    token_ticker: String!
    initial_supply: BigInt!
    decimals: BigInt!
    extra_fields: String!
}

type TransferTransaction @entity {
    id: ID!

    token_identifier: String!
    value: BigInt!
    method: String
    arg1: String
    arg2: String
    extra_fields: String
}

type NFTIssuanceTransaction implements Issuance @entity {
    id: ID!

    tx: Transaction!

    token_name: String!
    token_ticker: String!
    extra_fields: String!
}

type SFTIssuanceTransaction implements Issuance @entity {
    id: ID!

    tx: Transaction!

    token_name: String!
    token_ticker: String!
    extra_fields: String!
}

type RolesAssigningTransaction @entity {
    id: ID!

    tx: Transaction!

    token_identifier: String!
    address: String!
    roles: [String!]!
}

type NFTCreationTransaction @entity {
    id: ID!

    tx: Transaction!

    token_identifier: String!
    initial_quantity: BigInt!
    nft_name: String!
    royalties: BigInt!
    hash: String!
    attributes: String!
    uris: [String!]!
}

type TransferCreationRoleTransaction @entity {
    id: ID!

    tx: Transaction!

    token_identifier: String!
    address_from: String!
    address_to: String!
}

type NFTTransferTransaction @entity {
    id: ID!

    tx: Transaction!

    token_identifier: String!
    nonce: BigInt!
    quantity: BigInt!
    destination: String!
}